<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	  xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        ">

	<!-- 会话 Cookie 模板  sessionIdCookie 是用于生产 Session ID Cookie 的模板-->
	<!-- <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="180000" />
	</bean> -->
	
<!-- 会话管理器 --> 
<bean id="sessionManager" 
class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"> 
 <property name="globalSessionTimeout" value="1800000"/> 
 <property name="deleteInvalidSessions" value="true"/> 
 <property name="sessionValidationSchedulerEnabled" value="true"/> 
 <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/> 
 <property name="sessionDAO" ref="sessionDAO"/> 
 <property name="sessionIdCookieEnabled" value="true"/> 
 <property name="sessionIdCookie" ref="sessionIdCookie"/> 
</bean> 
	
	
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"> 
 <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/> 
</bean> 
	<!-- 安全管理器  安全管理器使用用于 web 环境的 DefaultWebSecurityManager-->
	<!--配置securityManager-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="authenticator" ref="pointRealmAuthenticator"/>
        <property name="cacheManager" ref="cacheManager"/> 
        <property name="realms">
            <list>
                <ref bean="personRealm"/>
                <ref bean="backStageRealm"/>
                <ref bean="companyRealm"/>
            </list>
        </property>
    </bean>

 <!--自定义Authenticator-->
    <bean id="pointRealmAuthenticator"
          class="com.project.util.PointRealmAuthenticator">
        <property name="definedRealms">
            <map>
                <entry key="personRealm" value-ref="personRealm"/>
                <entry key="backStageRealm" value-ref="backStageRealm"/>
                <entry key="companyRealm" value-ref="companyRealm"/>
            </map>
        </property>
        </bean>
<!--配置密码匹配器-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
          <property name="hashAlgorithmName" value="${algorithmName}"></property>
           <property name="hashIterations" value="${hashIterations}"></property>
            <property name="storedCredentialsHexEncoded" value="false"></property>
          </bean>
         
   <!-- realm -->
   <!--配置realm-->
    <bean id="personRealm" class="com.project.realm.PersonRealm"
          p:credentialsMatcher-ref="credentialsMatcher"/>
    <bean id="backStageRealm" class="com.project.realm.BackStageRealm"
          p:credentialsMatcher-ref="credentialsMatcher"/>
    <bean id="companyRealm" class="com.project.realm.CompanyRealm"
          p:credentialsMatcher-ref="credentialsMatcher"/>

	<!-- 基于 Form 表单的身份验证过滤器 -->
	<!-- <bean id="formAuthenticationFilter"
		class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="num" />
		<property name="passwordParam" value="pass" />
	</bean>  -->
	<!-- 自定义登出过滤器 -->
	<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
      <property name="redirectUrl" value="/jsp/backendLogin.jsp" />
    </bean>

	<!-- Shiro 的 Web 过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		
		 <property name="loginUrl" value="/jsp/frontLogin.jsp"/> 
		<!--  <property name="successUrl" value="jsp/index.jsp" /> -->
		 <property name="unauthorizedUrl" value="/jsp/unauthorized.jsp"/> 
		 
	<property name="filters">
		<map>
		<!-- 自定义表单过滤器 -->
		<!-- <entry key="authc" value-ref="formAuthenticationFilter" /> -->
			<entry key="adminlogout" value-ref="logoutFilter"/>
		</map>
	</property>
		<property name="filterChainDefinitions">
			<value>
				<!-- /index.jsp = anon
				/unauthorized.jsp = anon
				/login.jsp = authc
				/logout = logout -->
				/css/**=anon
				/fonts/**=anon
				/html/**=anon
				/image/**=anon
				/images/**=anon
				/js/**=anon
				 /jsp/frontLogin.jsp=anon
				 /jsp/backendLogin.jsp=anon
				  /jsp/register.jsp=anon
				 /code/**=anon
				 /sms/**=anon
				/person/**=anon
				/backStage/**=anon
				<!--  /tset4.do=perms["complainMP"] -->
				 /**=anon
			   
			</value>
		</property>
	</bean> 
	
	
</beans>